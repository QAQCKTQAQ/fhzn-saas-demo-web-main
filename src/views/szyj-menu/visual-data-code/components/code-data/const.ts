// 链路枚举值
export const CHAIN_MAP: any = {
	1: 'DYRH感知YJ到DYRH感知YJ-ZL',
	// 2: 'DYRH感知YJ到DYRH感知YJ-参数',
	3: 'JC数字YJ到DYRH数字YJ-ZL',
	4: 'JC数字YJ到DYRH数字YJ-参数',
	5: 'LD数字YJ到DYRH数字YJ-ZL',
	6: 'LD数字YJ到DYRH数字YJ-主动数据参数',
	7: 'LD数字YJ到DYRH数字YJ-LD被动识别结果参数',
	8: 'LD数字YJ到DYRH数字YJ-LD给SAR检测识别参数',
	9: 'GX数字YJ到DYRH数字YJ-ZL',
	10: 'GX数字YJ到DYRH数字YJ-参数',
	11: 'DYRH数字YJ到JC数字YJ-ZL',
	12: 'DYRH数字YJ到JC数字YJ-参数',
	13: 'DYRH数字YJ到LDYJ-ZL',
	14: 'DYRH数字YJ到LDYJ-参数',
	15: 'DYRH数字YJ到GXYJ-ZL',
	16: 'DYRH数字YJ到GXYJ-参数',
	17: 'GZJC调度到智能算法-ZL',
	// 18: 'GZJC调度到智能算法-参数',
	19: '智能算法到GZJC调度-ZL',
	// 20: '智能算法到GZJC调度-参数',
	21: 'DYRH感知YJ到DYRH感知YJ-SAR目标识别结果',
	22: 'DYRH感知YJ到DYRH感知YJ-HW目标识别结果',
	23: 'DYRH感知YJ到DYRH感知YJ-LD主动探测结果',
	24: 'DYRH感知YJ到DYRH感知YJ-XT干扰算法输入参数',
	25: 'DYRH感知YJ到DYRH感知YJ-XT跟踪LD状态参数',
	26: 'DYRH感知YJ到DYRH感知YJ-XT管控信息状态参数',
	27: 'DYRH感知YJ到DYRH感知YJ-惯导信息参数',
	28: 'GZJC调度到智能算法-ZZCG算法参数',
	29: 'GZJC调度到智能算法-XT融合识别算法参数',
	30: 'GZJC调度到智能算法-XT探测构型JC参数',
	31: 'GZJC调度到智能算法-XT管控算法参数',
	32: 'GZJC调度到智能算法-XT干扰JC算法参数',
	33: 'GZJC调度到智能算法-LD被动识别算法参数',
	// 34: 'GZJC调度到智能算法-DCLY抗干扰算法参数',
	35: 'GZJC调度到智能算法-LD参数JBKGRJC算法参数',
	// 36: 'GZJC调度到智能算法-LD参数JBKGRJC算法参数',
	37: 'GZJC调度到智能算法-HW目标智能识别算法参数',
	38: 'GZJC调度到智能算法-SAR目标智能识别算法参数',
	39: 'GZJC调度到智能算法-DD/XTHRRP舰船智能识别算法参数',
	40: 'GZJC调度到智能算法-FBSLH检测算法参数',
	41: '智能算法到GZJC调度-ZZCG算法结果参数',
	42: '智能算法到GZJC调度-XT融合识别算法参数',
	43: '智能算法到GZJC调度-XT探测构型JC参数',
	44: '智能算法到GZJC调度-XT管控算法参数',
	45: '智能算法到GZJC调度-XT干扰JC算法参数',
	46: '智能算法到GZJC调度-LD被动识别算法参数',
	// 47: '智能算法到GZJC调度-DCLY抗干扰算法参数',
	48: '智能算法到GZJC调度-LD参数JBKGRJC算法参数',
	// 49: '智能算法到GZJC调度-LD参数JBKGRJC算法参数',
	50: '智能算法到GZJC调度-HW目标智能识别算法参数',
	51: '智能算法到GZJC调度-SAR目标智能识别算法参数',
	52: '智能算法到GZJC调度-DD/XTHRRP舰船智能识别算法参数',
	53: '智能算法到GZJC调度-FBSLH检测算法参数',
	54: 'GZJC调度到智能算法-LD参数JBKGRJC算法&DCLY抗干扰算法',
	55: '智能算法到GZJC调度-LD参数JBKGRJC算法&DCLY抗干扰算法',
	56: 'GZJC调度到智能算法-XTRZ侦察算法参数',
	57: '智能算法到GZJC调度-XTRZ侦察算法参数',

	58: 'FZTY平台到集成调度-CJBY到HBSC（信号级）指令',
	59: 'FZTY平台到集成调度-CJBY到HBSC（信号级）参数',
	60: 'FZTY平台到集成调度-CJBY到HBSC（功能级）指令',
	61: 'FZTY平台到集成调度-CJBY到HBSC（功能级）参数',
	62: 'FZTY平台到集成调度-CJBY到集成调度（转发XTGRJC）指令',
	63: 'FZTY平台到集成调度-CJBY到集成调度（转发XTGRJC）参数',
	64: 'FZTY平台到集成调度-SARCX模块到GZJC调度指令和参数',
	65: 'FZTY平台到集成调度-HWCX模块到GZJC调度指令',
	66: 'FZTY平台到集成调度-HWCX模块到GZJC调度参数',
	67: 'FZTY平台到集成调度-GDSJ到GZJC调度指令',
	68: 'FZTY平台到集成调度-GDSJ到GZJC调度参数',
	69: 'FZTY平台到集成调度-CJBY到GRRZ侦察指令',
	70: 'FZTY平台到集成调度-CJBY到GRRZ侦察参数',
	71: '集成调度到FZTY平台-DYRH感知样机到ZSBY模块指令',
	72: '集成调度到FZTY平台-DYRH感知样机到ZSBY模块参数',
	73: '集成调度到FZTY平台-DYRH感知样机到SARCX模块指令和参数',
	74: '集成调度到FZTY平台-DYRH感知样机到HWCX模块指令',
	75: '集成调度到FZTY平台-DYRH感知样机到HWCX模块参数',
	76: '集成调度到FZTY平台-DYRH感知样机到CJBY（GRJC结果）指令',
	77: '集成调度到FZTY平台-DYRH感知样机到CJBY（GRJC结果）参数',
	78: '集成调度到FZTY平台-DYRH感知样机到CJBY（GRRZ侦察结果）指令',
	79: '集成调度到FZTY平台-DYRH感知样机到CJBY（GRRZ侦察结果）参数',
	80: 'GZJC调度到智能算法-HW建筑算法参数',
	81: 'GZJC调度到智能算法-HW飞机算法参数',
	84: 'GZJC调度到智能算法-SAR和HW异构算法参数',
	86: '智能算法到GZJC调度-SAR和HW异构算法参数'
}

export const treeData = [
	{
		key: '1-21-22-23-24-25-26-27',
		label: 'DYRH感知YJ到DYRH感知YJ'
	},
	{
		key: '5-6-7-8',
		label: 'LD数字YJ到DYRH数字YJ'
	},
	{
		key: '13-14',
		label: 'DYRH数字YJ到LDYJ'
	},
	{
		key: '9-10',
		label: 'GX数字YJ到DYRH数字YJ'
	},
	{
		key: '15-16',
		label: 'DYRH数字YJ到GXYJ'
	},
	{
		key: '11-12',
		label: 'DYRH数字YJ到JC数字YJ'
	},
	{
		key: '3-4',
		label: 'JC数字YJ到DYRH数字YJ'
	},
	{
		key: '17-28-29-30-31-32-33-35-37-38-39-40-54-56-80-81-82-84',
		label: 'GZJC调度到智能算法'
	},
	{
		key: '19-41-42-43-44-45-46-48-50-51-52-53-55-57-86',
		label: '智能算法到GZJC调度'
	},
	{
		key: '58-59-60-61-62-63-64-65-66-67-68-69-70',
		label: 'FZTY平台到集成调度'
	},
	{
		key: '71-72-73-74-75-76-77-78-79',
		label: '集成调度到FZTY平台'
	}
]

// 拓扑图发布订阅key
export const TOPOLOGY_DRAWER_KEY = 'TOPOLOGY_DRAWER_KEY'

// 获取key对应输入输出
export const MATE_IN_OUT_DATA = 'MATE_IN_OUT_DATA'
// 发送拿到key对应输入输出的chart的line数据
export const CHART_LINE_NEW_DATA = 'CHART_LINE_NEW_DATA'
// charts拓扑图line数据
// const codeToIntegratedSchedulingKeys = '19-41-42-43-44-45-46-48-50-51-52-53-55-57'
// const integratedSchedulingToCodeKeys = '17-28-29-30-31-32-33-35-37-38-39-40-54-56'

export const chartLineData = [
	// 光学样机-感知调度
	{
		key: '9-10',
		coords: [
			[5, 1000],
			[490, 1000],
			[490, 540]
		]
	},
	// 感知调度-光学样机
	{
		key: '15-16',
		coords: [
			[480, 530],
			[480, 990],
			[5, 990]
		]
	},
	// 决策-感知调度
	{
		key: '3-4',
		coords: [
			[1000, 1000],
			[510, 1000],
			[510, 540]
		]
	},
	// 感知调度-决策
	{
		key: '11-12',
		coords: [
			[520, 530],
			[520, 990],
			[990, 990]
		]
	},
	// LD样机-感知调度
	{
		key: '5-6-7-8',
		coords: [
			[0, 160],
			[470, 160],
			[470, 470]
		]
	},
	// 感知调度-LD样机
	{
		key: '13-14',
		coords: [
			[480, 480],
			[480, 140],
			[10, 140]
		]
	},
	// 控制/他弹-感知调度
	{
		key: '1-21-22-23-24-25-26-27',
		coords: [
			[1000, 140],
			[520, 140],
			[520, 140]
		]
	},
	// 感知调度-控制/他弹
	{
		key: '1-21-22-23-24-25-26-27',
		coords: [
			[530, 470],
			[530, 160],
			[1000, 160]
		]
	},

	// 多模*****生成算法-感知调度
	{
		key: '48',
		coords: [
			[10, 780],
			[10, 540],
			[500, 540]
		]
	},
	// 感知调度-多模*****生成算法
	{
		key: '35',
		coords: [
			[500, 550],
			[30, 560],
			[30, 780]
		]
	},
	// // // 智能-感知调度
	// {
	// 	key: codeToIntegratedSchedulingKeys,
	// 	coords: [
	// 		[83, 400],
	// 		[83, 530],
	// 		[500, 530]
	// 	]
	// },
	// // 感知调度-智能
	// {
	// 	key: integratedSchedulingToCodeKeys,
	// 	coords: [
	// 		[500, 520],
	// 		[93, 520],
	// 		[93, 400]
	// 	]
	// },
	// 主动雷达****识别算法-感知调度
	{
		key: '52',
		coords: [
			[170, 780],
			[170, 570],
			[500, 570]
		]
	},
	// 感知调度-主动雷达****识别算法
	{
		key: '39',
		coords: [
			[500, 580],
			[190, 580],
			[190, 780]
		]
	},
	// 子阵****综合算法-感知调度
	{
		key: '41',
		coords: [
			[40, 300],
			[40, 510],
			[490, 510]
		]
	},
	// 感知调度-子阵****综合算法
	{
		key: '28',
		coords: [
			[490, 500],
			[60, 490],
			[60, 300]
		]
	},
	// 干扰行*****测算法-感知调度
	{
		key: '54',
		coords: [
			[330, 780],
			[330, 590],
			[490, 590]
		]
	},
	// 感知调度-干扰行*****测算法
	{
		key: '55',
		coords: [
			[490, 610],
			[350, 610],
			[350, 780]
		]
	},
	// 多源异构****目标融合算法'-感知调度
	{
		key: '42',
		coords: [
			[290, 290],
			[290, 480],
			[490, 480]
		]
	},
	// 感知调度-多源异构****目标融合算法'
	{
		key: '29',
		coords: [
			[490, 460],
			[310, 460],
			[310, 290]
		]
	},
	// 单弹红外*****部位识别算法-感知调度
	{
		key: '50',
		coords: [
			[630, 290],
			[630, 490],
			[500, 490]
		]
	},
	// 感知调度-单弹红外*****部位识别算法
	{
		key: '82',
		coords: [
			[500, 480],
			[610, 480],
			[610, 290]
		]
	},
	// 分布****决策算法-感知调度
	{
		key: '32',
		coords: [
			[660, 780],
			[660, 580],
			[490, 580]
		]
	},
	// 感知调度-分布****决策算法
	{
		key: '45',
		coords: [
			[590, 600],
			[640, 600],
			[640, 780]
		]
	},
	// 单弹*****标识别算法-感知调度
	{
		key: '50',
		coords: [
			[810, 290],
			[810, 510],
			[500, 510]
		]
	},
	// 感知调度-单弹*****标识别算法
	{
		key: '81',
		coords: [
			[500, 500],
			[790, 500],
			[790, 290]
		]
	},
	// SAR*****匹配算法-感知调度
	{
		key: '86',
		coords: [
			[810, 780],
			[810, 560],
			[49, 560]
		]
	},
	// 感知调度-SAR*****匹配算法
	{
		key: '84',
		coords: [
			[49, 570],
			[790, 570],
			[790, 780]
		]
	},
	// 复杂电磁*****侦查算法-感知调度
	{
		key: '57',
		coords: [
			[980, 780],
			[980, 540],
			[490, 540]
		]
	},
	// 感知调度-复杂电磁*****侦查算法
	{
		key: '56',
		coords: [
			[490, 550],
			[960, 550],
			[960, 780]
		]
	},
	// 固定*****智能算法-感知调度
	{
		key: '50',
		coords: [
			[960, 290],
			[960, 530],
			[500, 530]
		]
	},
	// 感知调度-固定*****智能算法
	{
		key: '80',
		coords: [
			[500, 520],
			[940, 520],
			[940, 290]
		]
	},
	// // x: 500,
	// // y: 605,
	// 感知调度-他弹
	{
		key: '1-21-22-23-24-25-26-27',
		coords: [
			[490, 450],
			[490, 50]
		]
	},
	// 他弹-感知调度
	{
		key: '1-21-22-23-24-25-26-27',
		coords: [
			[510, 50],
			[510, 450]
		]
	},
	// 矩形
	{
		type: 'juxing',
		coords: [
			[0, 200],
			[1000, 200],
			[1000, 900],
			[0, 900],
			[0, 200]
		]
	}
]
